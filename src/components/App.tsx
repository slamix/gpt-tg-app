import { useEffect, useState } from "react";
import { Navigate, Route, Routes, HashRouter } from "react-router-dom";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { useSelector, useDispatch } from "react-redux";
import { RootState } from "@/slices";
import { initAuth } from "@/slices/thunks/authThunks";
import { setError, setToken } from "@/slices/authSlice";
import { init } from "@/init";
import { retrieveRawInitData } from "@telegram-apps/sdk";
import { routes } from "@/navigation/routes";
import { ModalRemove } from "@/components/modals/ModalRemove";
import { ModalRename } from "@/components/modals/ModalRename";
import LoadingPage from "@/pages/LoadingPage";
import ErrorPage from "@/pages/ErrorPage";

// react-query –∫–ª–∏–µ–Ω—Ç
const queryClient = new QueryClient();

export function App() {
  const dispatch = useDispatch();
  const { token, loading, error } = useSelector((state: RootState) => state.auth);
  const [isInitialized, setIsInitialized] = useState(false);

  // 1Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram SDK –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  useEffect(() => {
    const initializeApp = async () => {
      try {
        await init({
          debug: true,
          eruda: true,
          mockForMacOS: true,
        });
        setIsInitialized(true);
      } catch (err: any) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SDK:', err);
        setIsInitialized(true); // –í—Å—ë —Ä–∞–≤–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        dispatch(setError(err.message || '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏'));
      }
    };
    initializeApp();
  }, [dispatch]);

  // 2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
  useEffect(() => {
    if (!isInitialized) return;

    const checkAuthAndInit = async () => {
      try {
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º getToken –∑–¥–µ—Å—å —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        const { getToken } = await import('@/utils/tokenStorage');
        const storedToken = await getToken();
        
        console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:', storedToken ? '–ù–ê–ô–î–ï–ù' : '–ù–ï–¢');
        
        if (storedToken) {
          // –¢–æ–∫–µ–Ω –µ—Å—Ç—å - –∑–∞–≥—Ä—É–∂–∞–µ–º –µ–≥–æ –≤ Redux –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º
          console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º –≤ state');
          dispatch(setToken(storedToken));
          return;
        }
        
        // –¢–æ–∫–µ–Ω–∞ –Ω–µ—Ç - –Ω—É–∂–Ω–∞ –ø–µ—Ä–≤–∏—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ initData
        console.log('‚ùå –¢–æ–∫–µ–Ω–∞ –Ω–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–≤–∏—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        const initData = retrieveRawInitData();
        console.log('üì± initData:', initData ? '–ø–æ–ª—É—á–µ–Ω—ã' : '–ù–ï –ø–æ–ª—É—á–µ–Ω—ã');
        
        if (initData) {
          console.log('‚û°Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤–∏—á–Ω—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ initData...');
          dispatch(initAuth(initData) as any);
        } else {
          console.error("‚ùå initData –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç Telegram WebApp");
          dispatch(setError("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è –≤ Telegram"));
        }
      } catch (err: any) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
        dispatch(setError(err.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'));
      }
    };

    checkAuthAndInit();
  }, [isInitialized, dispatch]);

  // 3Ô∏è‚É£ –ó–∞—â–∏—Ç–∞ –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ loading (—Ç–∞–π–º–∞—É—Ç 10 —Å–µ–∫—É–Ω–¥)
  useEffect(() => {
    if (loading) {
      const timeout = setTimeout(() => {
        console.error('‚è∞ –¢–∞–π–º–∞—É—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –ø—Ä–æ—à–ª–æ –±–æ–ª–µ–µ 10 —Å–µ–∫—É–Ω–¥');
        dispatch(setError('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'));
      }, 10000);
      return () => clearTimeout(timeout);
    }
  }, [loading, dispatch]);

  // 4Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–æ—á–Ω–æ–µ –∏ –æ—à–∏–±–æ—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  console.log('üé® –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–Ω–¥–µ—Ä–∞:', { loading, error: !!error, token: !!token, isInitialized });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç—Å—è
  if (!isInitialized || loading) {
    console.log('‚è≥ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º LoadingPage');
    return <LoadingPage />;
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
  if (error) {
    console.log('‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ–º ErrorPage:', error);
    return <ErrorPage error={error} />;
  }

  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É (–∂–¥—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
  if (!token) {
    console.log('‚è≥ –ñ–¥—ë–º —Ç–æ–∫–µ–Ω...');
    return <LoadingPage />;
  }

  // 5Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–Ω–¥–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  console.log('‚úÖ –†–µ–Ω–¥–µ—Ä–∏–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
  return (
    <QueryClientProvider client={queryClient}>
      <HashRouter>
        <Routes>
          {routes.map((route) => (
            <Route key={route.path} {...route} />
          ))}
          <Route path="*" element={<Navigate to="/" />} />
        </Routes>
      </HashRouter>

      {/* –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –º–æ–¥–∞–ª–∫–∏ */}
      <ModalRemove />
      <ModalRename />
    </QueryClientProvider>
  );
}
