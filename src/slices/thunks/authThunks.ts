import { createAsyncThunk } from "@reduxjs/toolkit";
import { authorize } from "../../api/authApi";
import { getToken } from "../../utils/tokenStorage";

export const initAuth = createAsyncThunk(
  "auth/init",
  async (initData: string, { rejectWithValue }) => {
    try {
      console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
      const token = await getToken();
      console.log('üì¶ –¢–æ–∫–µ–Ω –∏–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞:', token ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω');

      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç - –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
      if (!token) {
        console.log('‚û°Ô∏è –¢–æ–∫–µ–Ω–∞ –Ω–µ—Ç, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
        const newToken = await authorize(initData);
        return newToken;
      }

      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å - –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ
      // –∏ –µ—Å–ª–∏ –ø–æ–ª—É—á–∏–º 401, —Ç–æ interceptor –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–∏—Ç —Ç–æ–∫–µ–Ω
      console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ');
      return token;
    } catch (err: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', err);
      return rejectWithValue(err.message || "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏");
    }
  }
);
